
# require '/Users/err8n/p/zayin/lib/zayin/rake/vagrant/php'
require 'zayin/rake/vagrant/php'
Zayin::Rake::Vagrant::PhpTasks.new

namespace :php do
  VM_BASEDIR = '/vagrant/omeka/plugins/NeatlineFeatures'

  desc 'This runs PHPUnit on NeatlineFeatures.'
  task :unit, [:target] do |task, args|
    target = args[:target] || '.'

    # Enabling the coverage report below causes memory issues, so I've
    # commented it out below.
    Rake::Task['vagrant:php:unit'].invoke(
      File.join(VM_BASEDIR, 'tests'),
      File.join(VM_BASEDIR, 'tests', 'phpunit.xml'),
      target
      # File.join(VM_BASEDIR, 'coverage')
    )
  end

  desc 'This runs PHP Copy/Paste Detection report on NeatlineFeatures.'
  task :cpd do
    Rake::Task['vagrant:php:cpd'].invoke(
      VM_BASEDIR,
      File.join(VM_BASEDIR, 'cpd')
    )
  end

  desc 'This runs PHP CodeSniffer on NeatlineFeatures.'
  task :cs do
    Rake::Task['vagrant:php:cs'].invoke(
      VM_BASEDIR,
      File.join(VM_BASEDIR, 'cs'),
      File.join(VM_BASEDIR, 'php-testing-rules', 'phpcs.xml'),
      %{--ignore=*/features/*,*/tests/*}
    )
  end

  desc 'This runs PHP Depend on NeatlineFeatures.'
  task :depend do
    Rake::Task['vagrant:php:depend'].invoke(
      VM_BASEDIR,
      File.join(VM_BASEDIR, 'depend')
    )
  end

  desc 'This runs PHP Documentor on NeatlineFeatures.'
  task :doc do
    Rake::Task['vagrant:php:doc'].invoke(
      VM_BASEDIR,
      File.join(VM_BASEDIR, 'doc')
    )
  end

  desc 'This run PHP Mess Detector on NeatlineFeatures.'
  task :md do
    Rake::Task['vagrant:php:md'].invoke(
      VM_BASEDIR,
      File.join(VM_BASEDIR, 'md'),
      File.join(VM_BASEDIR, 'php-testing-rules', 'phpmd.xml')
    )
  end

  desc 'This downloads the PHP style guides.'
  task :getstyle do
    sh %{git clone https://github.com/waynegraham/php-testing-rules}
  end
end


